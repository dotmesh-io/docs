variables:

  NAME: dotmesh-docs

  CI_DOCKER_REGISTRY: quay.io/dotmesh
  CI_DOCKER_TAG: $CI_COMMIT_SHA

  GCLOUD_REGISTRY: gcr.io/dotmesh-production
  GCLOUD_PROJECT_ID: dotmesh-production
  GCLOUD_ZONE: europe-west2-a
  GCLOUD_CLUSTER_ID: dotscience-production

stages:
  - build
  - deploy

build_staging:
  stage: build
  tags:
    - ubuntu
    - fast
  variables:
    NAMESPACE: docs-stage
    ENV_NAME: staging
    IMAGE: $GCLOUD_REGISTRY/$NAME-staging
    VERSION: $CI_COMMIT_SHA
  before_script:
    - bash ./scripts/gcloud.sh login
  script:
    - make images
    - make release.build
    - echo "pushing image - $IMAGE:$VERSION"
    - bash ./scripts/gcloud.sh gcloud docker -- push $IMAGE:$VERSION

build_production:
  stage: build
  tags:
    - ubuntu
    - fast
  variables:
    NAMESPACE: docs
    ENV_NAME: production
    IMAGE: $GCLOUD_REGISTRY/$NAME-production
    VERSION: $CI_COMMIT_SHA
  before_script:
    - bash ./scripts/gcloud.sh login
  script:
    - make images
    - make release.build
    - echo "pushing image - $IMAGE:$VERSION"
    - bash ./scripts/gcloud.sh gcloud docker -- push $IMAGE:$VERSION

deploy_staging:
  stage: deploy
  tags:
    - ubuntu
    - fast
  variables:
    NAMESPACE: docs-stage
    ENV_NAME: staging
    IMAGE: $GCLOUD_REGISTRY/$NAME-staging
    VERSION: $CI_COMMIT_SHA
  before_script:
    - bash ./scripts/gcloud.sh login
  script:
    - echo "deploying image - $IMAGE:$VERSION to $NAMESPACE"
    - bash ./scripts/gcloud.sh bash /app/scripts/deploy.sh

deploy_production:
  stage: deploy
  when: manual
  tags:
    - ubuntu
    - fast
  variables:
    NAMESPACE: docs
    ENV_NAME: production
    IMAGE: $GCLOUD_REGISTRY/$NAME-production
    VERSION: $CI_COMMIT_SHA
  before_script:
    - bash ./scripts/gcloud.sh login
  script:
    - echo "deploying image - $IMAGE:$VERSION to $NAMESPACE"
    - bash ./scripts/gcloud.sh bash /app/scripts/deploy.sh
  only:
    - master
